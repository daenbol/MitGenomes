# 1] As far as we have a preassembled genome, we should use it

cd ~/chironomids_DNA_reads/Paraborniella_tonnoiri

cd Kazan_reads
cp ~/PVandPP_first_part/pipelines/trimmomatic /
for filename in *.fq; do fastqc ${filename}; done

cd ..

cd Moscow_reads
cp ~/PVandPP_first_part/pipelines/trimmomatic /
for filename in *.fq; do fastqc ${filename}; done

# Dowloading .html files and analizing them

# Looking for "right" parametrs for trimmomatic

./trimmomatic

# Browsing in all subfolders of "Trimmed" and checking that everything is OK

# Coping trimmed files to a grandparent directory

cp *.fq ../.. # in each subfolder
cat *unpaired* > Paraborniella_tonnoiri_unpaired.fq
cat *for*pai* > Paraborniella_tonnoiri_forward_paired.fq
cat *rev*pai* > Paraborniella_tonnoiri_reverce_paired.fq

mkdir Index
cd Index

mkdir 2_attempt
cd ..

# Coping PV mitochondrial genes into 2_attempt

cd ..
cp tonnoiri_genome.fasta Index/2_attempt

cd Index/2_attempt

makeblastdb -in tonnoiri_genome.fasta -dbtype nucl

blastn -task blastn -query Polypedilum_vanderplanki.fas -db tonnoiri_genome.fast -out blastnPaTaGenomevsPoVaMitGenome7.out -outfmt 7

# There were many hits. Unfortenattly it is too long to reproduse further part
# of 1] with deleted contigs, so after a failure with Orthocladiinae_acuticauda # all my plans were canceled 

cd ..

for filename in chernovskiia_S4_*.fq; do bwa mem Polypedilum_Vanderplanki_mitochondrion_complete_genome.fasta ${filename} > MAPPED_2_${filename:0:-3}.sam -M -t 30; done

for filename in *.sam; do samtools view -S -F4 -bh ${filename} > ${filename:0:-4}.bam; done

for filename in *.bam; do bedtools bamtofastq -i ${filename} -fq ${filename:0:-4}_F4.fq; done

cat *f4*.fq > mapped_Paraborniella_tonnoiri_f4_sorted.fq

perl /data1/Shared/bioinftools/bbmap in=chernovskiia_S4_mapped_vs_PV_F4_sorted.fq out=chernovskiia_S4_forward_paired_mapped_vs_PV_F4_sorted.fq out2=chernovskiia_S4_reverce_paired_mapped_vs_PV_F4_sorted.fq outs=chernovskiia_S4_unpaired_mapped_vs_PV_F4_sorted.fq

mkdir spades

python /data/Shared/bioinftools/SPAdes-3.13.1-Linux/bin/spades.py -1 chernovskiia_S4_forward_paired_mapped_vs_PV_F4_sorted.fq -2 chernovskiia_S4_reverce_paired_mapped_vs_PV_F4_sorted.fq -s chernovskiia_S4_unpaired_mapped_vs_PV_F4_sorted.fq -o spades/ -t 30

# Previewing our output

cd spades
infoseq scaffolds.fasta -only -length > preview.txt
less preview.txt

# In our case scaffold ~ contig

# Fortinatly there are many scaffolds in region 15 - 17 kB.
# First, we need to pull out candidads with proper length.

python ScaffoldsFromWindow.ipynb # check the script in scripts folder on this repo
 
# Now lets try to pull our mitochondrial genome. There are sevreal approaches to do it

# 1) Make database out of candidads and blast COX1 gene from closely related species against db

makeblastdb -in scaffolds_in_range.fasta -dbtype nucl

blastn -task blastn -query cox1Polypedilum_tamanigrum -db scaffolds_in_range.fasta -out blastnCOX1vsMitCandidads_PaTo_7.out -outfmt 7

# 2) Make database out of candidads and blast .fas (made by MITOS v2) file with mitochondrial genes from closely related species against db

makeblastdb -in scaffolds_in_range.fasta -dbtype nucl

blastn -task blastn -query Polypedilum_vanderplanki_mit_genes.fasta -db scaffolds_in_range.fasta -out blastnPoVaMitGenesvsMitCandidads_PaTo_7.out -outfmt 7

# 3) Just local alligment of candidads with mitochondrial genome of closely related specie, for examle Polypedilum vanderplanki

makeblastdb -in scaffolds_in_range.fasta -dbtype nucl

for filename in MitC*.fasta; do water ${filename} Polypedilum_Vanderplanki_mitochondrion_complete_genome.fasta ${filename:0:-6}.water -gapopen 10.0 -gapextend 0.5; done

scp daniil@rkb2-server:~/chironomids_DNA_reads/Polypedilum_tamanigrum/Index/sort/spades/Mit*.water /home/daenbol/Documents/NurProjects/Polypedilum_tamanigrum/MitGen #the query shold be made from your computer

python ViewBlastResultsFromOUTFMT6.ipynb

# Then just pulling out candidad with max score

seqret scaffolds_in_range.fasta 
seqret -sequence scaffolds_in_range.fasta:*length_<Your_lenth>* -outseq MitCandidad1.fasta

# All approaches failed. Deadend

# 2] As this pipeline failed we should try to use another

cd Index
mkdir AgainstPV
cd AgainstPV

for filename in chernovskiia_S4_*.fq; do bwa mem Polypedilum_Vanderplanki_mitochondrion_complete_genome.fasta ${filename} > MAPPED_2_${filename:0:-3}.sam -M -t 30; done

for filename in *.sam; do samtools view -S -F4 -bh ${filename} > ${filename:0:-4}.bam; done

for filename in *.bam; do bedtools bamtofastq -i ${filename} -fq ${filename:0:-4}_F4.fq; done

cat *F4* > chernovskiia_S4_mapped_vs_PV_F4_sorted.fq

perl /data1/Shared/bioinftools/bbmap in=chernovskiia_S4_mapped_vs_PV_F4_sorted.fq out=chernovskiia_S4_forward_paired_mapped_vs_PV_F4_sorted.fq out2=chernovskiia_S4_reverce_paired_mapped_vs_PV_F4_sorted.fq outs=chernovskiia_S4_unpaired_mapped_vs_PV_F4_sorted.fq

mkdir spades

python /data/Shared/bioinftools/SPAdes-3.13.1-Linux/bin/spades.py -1 Paraborniella_tonnoiri_forward_pairedM_f4_sorted_s.fq -2 mapped_Paraborniella_tonnoiri_reverce_pairedM_f4_sorted_s.fq -s mapped_Paraborniella_tonnoiri_unpairedM_f4_sorted_s.fq -o spades/ -t 30

# Previewing our output

cd spades
infoseq scaffolds.fasta -only -length > preview.txt
less preview.txt

# In our case scaffold ~ contig

# Fortinatly there are many scaffolds in region 15 - 17 kB.
# First, we need to pull out candidads with proper length.

python ScaffoldsFromWindow.ipynb # check the script in scripts folder on this repo

# Now lets try to pull our mitochondrial genome. There are sevreal approaches to do it

# 1) Make database out of candidads and blast COX1 gene from closely related species against db

makeblastdb -in scaffolds_in_range.fasta -dbtype nucl

blastn -task blastn -query cox1Polypedilum_tamanigrum -db scaffolds_in_range.fasta -out blastnCOX1vsMitCandidads_PaTo_7.out -outfmt 7

# 2) Make database out of candidads and blast .fas (made by MITOS v2) file with mitochondrial genes from closely related species against db

makeblastdb -in scaffolds_in_range.fasta -dbtype nucl
blastn -task blastn -query Polypedilum_vanderplanki_mit_genes.fasta -db scaffolds_in_range.fasta -out blastnPoVaMitGenesvsMitCandidads_PaTo_7.out -outfmt 7

# 3) Just local alligment of candidads with mitochondrial genome of closely related specie, for examle Polypedilum vanderplanki

makeblastdb -in scaffolds_in_range.fasta -dbtype nucl

for filename in MitC*.fasta; do water ${filename} Polypedilum_Vanderplanki_mitochondrion_complete_genome.fasta ${filename:0:-6}.water -gapopen 10.0 -gapextend 0.5; done

scp daniil@rkb2-server:~/chironomids_DNA_reads/Polypedilum_tamanigrum/Index/sort/spades/Mit*.water /home/daenbol/Documents/NurProjects/Polypedilum_tamanigrum/MitGen #the query shold be made from your computer

python ViewBlastResultsFromOUTFMT6.ipynb

# Then just pulling out candidad with max score

seqret scaffolds_in_range.fasta
seqret -sequence scaffolds_in_range.fasta:*length_<Your_lenth>* -outseq MitCandidad1.fasta

# All approaches failed. Deadend

# DEADEND
